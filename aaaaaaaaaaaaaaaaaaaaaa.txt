the problem is probably not with malloc, because it was "working" a bit before the asserts started failing
go through the whole interrupt handler and interrupt connector, make sure that's all working.
something with printing in the IRQ handler is causing the text to fly about the screen
also there's a ton of prefetch aborts happening that i silently but not silently ignored (should print P)
  actually i lied they aren't happening anymore

no longer ASSERT_FAILING
strings are being split, meaning printf is being interruputed
  by what?
  if it's the IRQ handler, that's bad (while handling the exception it triggers again?)
  if it's the prefetch abort handler, why didn't that happen b4
  LED is off, the IRQ list agrees
  the IRQ list says IRQ 9 is pending
 text is changing in different places around the screen
  are other cores taking the IRQs and therefore messing stuff up?
  or is the exception handler getting interrupted
  
removing the IRQ list caused the text to scroll about as normal
but now I'm getting software_interrupt_vector being called, and that instructions shouldn't appear ANYWHERE in the kernel image.
probably the handler is calling an invalid IRQ handler
  do I ever initalize that array
  because if not, that could be filled with non-0 garbage pointers to random places in memory

"IRQ 64 is pending. âˆŸD"
  this means that IRQ 64 is handled (but LED is off), then a Data abort happens
  yet another new outcome
  but elsewhere on the screen it doesn't data abort after IRQ 64
  so is libuspi breaking????
  AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
  :bruh:

ok spleepl time :)